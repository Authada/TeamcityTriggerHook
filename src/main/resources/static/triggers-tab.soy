{namespace com.trimble.tekla.teamcity}

/**
 * Renders Triggertab contents in hook configuration user interface
 */
{template .triggerTab}
    {literal}
        <input id="triggersJson" name="triggersJson" type="hidden" />
    {/literal}
    {call aui.table}
        {param id: 'triggers-table' /}
        {param extraClasses: 'aui-table-interactive tc-table' /}
        {param columnsContent}
            <colgroup>
                <col></col>
                <col></col>
                <col></col>
                <col></col>
                <col></col>
                <col></col>
                <col></col>
            </colgroup>
        {/param}
        {param theadContent}
            <tr>
                <th colspan="2">{getText('trigger.column.regexp')}</th>
                <th>{getText('trigger.column.name')}</th>
                <th>{getText('trigger.column.dependency')}</th>
                <th>{getText('trigger.column.configuration')}</th>
                <th>{getText('trigger.column.target')}</th>
                <th></th>
            </tr>
            <tr>
                <th colspan="2">
                    {call aui.form.input}
                        {param id: 'branchRegexp' /}
                        {param type: 'text' /}
                        {param infoMessage: getText('branch.regexp.info') /}
                        {param extraAttributes: ['data-aui-form-notification-position' : 'top'] /}
                        {param extraClasses: 'long-field' /}
                    {/call}
                </th>
                <th>
                    {call aui.form.input}
                        {param id: 'triggerNameId' /}
                        {param type: 'text' /}
                        {param infoMessage: getText('trigger.name.info') /}
                        {param extraAttributes: ['data-aui-form-notification-position' : 'top'] /}
                        {param extraClasses: 'medium-field' /}
                    {/call}
                </th>
                <th>
                    {call aui.form.input}
                        {param id: 'triggerDependencyId' /}
                        {param type: 'text' /}
                        {param infoMessage: getText('trigger.dependency.info') /}
                        {param extraAttributes: ['data-aui-form-notification-position' : 'top'] /}
                        {param extraClasses: 'medium-field' /}
                    {/call}
                </th>
                <th>
                    {call aui.form.input}
                        {param id: 'triggerConfigurationId' /}
                        {param type: 'text' /}
                        {param infoMessage: getText('trigger.configuration.info') /}
                        {param extraAttributes: ['data-aui-form-notification-position' : 'top'] /}
                        {param extraClasses: 'medium-field' /}
                    {/call}
                </th>
                <th>
                    {call aui.form.select}
                        {param id: 'triggerTarget' /}
                        {param options: [
                            ['text' : 'build', 'value' : 'build'],
                            ['text' : 'vcs', 'value' : 'vcs'],
                            ['text' : 'rest', 'value' : 'rest'],
                            ['text' : 'new tab', 'value' : 'tab']
                        ]/}
                    {/call}
                </th>
                <th>
                    {call aui.form.button}
                        {param text: '' /}
                        {param iconType: 'aui' /}
                        {param iconClass: 'aui-icon-small aui-iconfont-list-add' /}
                        {param iconText: 'add' /}
                    {/call}
                </th>
        {/param}
        {param content: '' /}
        {param tfootContent}
            <tr>
                <td colspan="7"></td>
            </tr>
        {/param}
    {/call}
    {call aui.message.info}
        {param content}
            {call aui.expander.revealText}
                {param triggerId: 'tc-trigger-info-text-trigger'/}
                {param contentId: 'tc-trigger-info-text-content'/}
                {param contentContent: getText('triggers.info') /}
            {/call}
        {/param}
    {/call}
{/template}
